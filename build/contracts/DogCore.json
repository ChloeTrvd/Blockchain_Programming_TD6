{
  "contractName": "DogCore",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cfoAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_preferredTransport",
          "type": "string"
        }
      ],
      "name": "tokenMetadata",
      "outputs": [
        {
          "name": "infoUrl",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "promoCreatedCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ceoAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GEN0_STARTING_PRICE",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setSiringAuctionAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_dogId",
          "type": "uint256"
        }
      ],
      "name": "isPregnant",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GEN0_AUCTION_DURATION",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "siringAuction",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setGeneScienceAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newCEO",
          "type": "address"
        }
      ],
      "name": "setCEO",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newCOO",
          "type": "address"
        }
      ],
      "name": "setCOO",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pregnantDogs",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_genes",
          "type": "uint256"
        },
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "createPromoDog",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_dogId",
          "type": "uint256"
        },
        {
          "name": "_startingPrice",
          "type": "uint256"
        },
        {
          "name": "_endingPrice",
          "type": "uint256"
        },
        {
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "createSaleAuction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "sireAllowedToAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_matronId",
          "type": "uint256"
        },
        {
          "name": "_sireId",
          "type": "uint256"
        }
      ],
      "name": "canBreedWith",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_dogId",
          "type": "uint256"
        },
        {
          "name": "_startingPrice",
          "type": "uint256"
        },
        {
          "name": "_endingPrice",
          "type": "uint256"
        },
        {
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "createSiringAuction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "setAutoBirthFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        },
        {
          "name": "_sireId",
          "type": "uint256"
        }
      ],
      "name": "approveSiring",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newCFO",
          "type": "address"
        }
      ],
      "name": "setCFO",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "secs",
          "type": "uint256"
        }
      ],
      "name": "setSecondsPerBlock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GEN0_CREATION_LIMIT",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newContractAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setSaleAuctionAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "count",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "secondsPerBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "name": "ownerTokens",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_matronId",
          "type": "uint256"
        }
      ],
      "name": "giveBirth",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dogIndexToOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawAuctionBalances",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "cooldowns",
      "outputs": [
        {
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cooAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "autoBirthFee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "erc721Metadata",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_genes",
          "type": "uint256"
        }
      ],
      "name": "createGen0Auction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_dogId",
          "type": "uint256"
        }
      ],
      "name": "isReadyToBreed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dogIndexToApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PROMO_CREATION_LIMIT",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "setMetadataAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "saleAuction",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "owner_Of",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_sireId",
          "type": "uint256"
        },
        {
          "name": "_matronId",
          "type": "uint256"
        }
      ],
      "name": "bidOnSiringAuction",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "gen0CreatedCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "geneScience",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_matronId",
          "type": "uint256"
        },
        {
          "name": "_sireId",
          "type": "uint256"
        }
      ],
      "name": "breedWithAuto",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "matronId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "sireId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "cooldownEndBlock",
          "type": "uint256"
        }
      ],
      "name": "Pregnant",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "dogId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "matronId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "sireId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "genes",
          "type": "uint256"
        }
      ],
      "name": "Birth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newContract",
          "type": "address"
        }
      ],
      "name": "ContractUpgrade",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_v2Address",
          "type": "address"
        }
      ],
      "name": "setNewAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getDog",
      "outputs": [
        {
          "name": "isGestating",
          "type": "bool"
        },
        {
          "name": "isReady",
          "type": "bool"
        },
        {
          "name": "cooldownIndex",
          "type": "uint256"
        },
        {
          "name": "nextActionAt",
          "type": "uint256"
        },
        {
          "name": "siringWithId",
          "type": "uint256"
        },
        {
          "name": "birthTime",
          "type": "uint256"
        },
        {
          "name": "matronId",
          "type": "uint256"
        },
        {
          "name": "sireId",
          "type": "uint256"
        },
        {
          "name": "generation",
          "type": "uint256"
        },
        {
          "name": "genes",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "446:6942:6:-;;;2024:5:2;2003:26;;;;;;;;;;;;;;;;;;;;4251:410:4;;;;;;;;;4299:9;4251:410;;;;;;;;4327:9;4251:410;;;;;;;;4355:9;4251:410;;;;;;;;4383:10;4251:410;;;;;;;;4412:10;4251:410;;;;;;;;4441:7;4251:410;;;;;;;;4467:7;4251:410;;;;;;;;4493:7;4251:410;;;;;;;;4519:7;4251:410;;;;;;;;4545:8;4251:410;;;;;;;;4572:6;4251:410;;;;;;;;4597:6;4251:410;;;;;;;;4622:6;4251:410;;;;;;;;4647:6;4251:410;;;;;;;;;;;;;;;:::i;:::-;;4781:2;4748:35;;1008:8:5;978:38;;3696:423:6;8:9:-1;5:2;;;30:1;27;20:12;5:2;3696:423:6;3764:4;3755:6;;:13;;;;;;;;;;;;;;;;;;3853:10;3840;;:23;;;;;;;;;;;;;;;;;;3953:10;3940;;:23;;;;;;;;;;;;;;;;;;4067:44;4078:1;4081;4084;4095:2;4108:1;4067:10;;;:44;;;:::i;:::-;;446:6942;;8382:1904:4;8579:4;9174:20;9312:15;;:::i;:::-;9655:16;8963:9;8948:26;;8935:9;:39;8927:48;;;;;;;;9020:7;9005:24;;8994:7;:35;8986:44;;;;;;;;9079:11;9064:28;;9049:11;:43;9041:52;;;;;;;;9218:1;9204:11;:15;;;;;;;;9174:46;;9251:2;9235:13;:18;;;9231:69;;;9286:2;9270:18;;9231:69;9330:314;;;;;;;;;9356:6;9330:314;;;;9395:3;9330:314;;;;;;9432:1;9330:314;;;;;;9465:9;9330:314;;;;;;9505:7;9330:314;;;;;;9542:1;9330:314;;;;;;9573:13;9330:314;;;;;;9620:11;9330:314;;;;;9312:332;;9694:1;9674:6;9686:4;9674:17;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;9674:17:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:21;9655:40;;9883:8;9868:25;;9856:8;:37;9848:46;;;;;;;;9945:157;9965:6;9986:8;10017:4;:13;;;10009:22;;10054:4;:11;;;10046:20;;10081:4;:10;;;9945:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10220:30;10230:1;10233:6;10241:8;10220:9;;;:30;;;:::i;:::-;10270:8;10263:15;;8382:1904;;;;;;;;;;:::o;6939:774::-;7105:19;:24;7125:3;7105:24;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;7201:3;7173:15;:25;7189:8;7173:25;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;7323:1;7306:19;;:5;:19;;;;7302:321;;;7342:19;:26;7362:5;7342:26;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;7466:20;:30;7487:8;7466:30;;;;;;;;;;;;7459:37;;;;;;;;;;;7583:18;:28;7602:8;7583:28;;;;;;;;;;;;7576:35;;;;;;;;;;;7302:321;7675:30;7684:5;7691:3;7696:8;7675:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6939:774;;;:::o;446:6942:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "446:6942:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5075:11;;;;;;;;;;;5053:34;;:10;:34;;;:87;;;;5126:13;;;;;;;;;;;5104:36;;:10;:36;;;5053:87;5031:120;;;;;;;;446:6942;1817:333:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1817:333:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1836:25:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1836:25:2;;;;;;;;;;;;;;;;;;;;;;;;;;;11526:353:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11526:353:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11526:353:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;703:32:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;703:32:7;;;;;;;;;;;;;;;;;;;;;;;694:42:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;694:42:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;694:42:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6113:420;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6113:420:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1804:25:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1804:25:2;;;;;;;;;;;;;;;;;;;;;;;;;;;512:55:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;512:55:7;;;;;;;;;;;;;;;;;;;;;;;1437:485:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1437:485:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;7950:93:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7950:93:8;;;;;;;;;;;;;;;;;;;;;;;5871:248:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5871:248:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;574:54:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;574:54:7;;;;;;;;;;;;;;;;;;;;;;;6824:39:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6824:39:4;;;;;;;;;;;;;;;;;;;;;;;;;;;7009:809:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7009:809:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1491:478:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1491:478:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;2823:132:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2823:132:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3385:132:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;1076:27:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1076:27:5;;;;;;;;;;;;;;;;;;;;;;;1041:344:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1041:344:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2041:1003:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2041:1003:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6624:313:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6624:313:6;;;;;;6244:56:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6244:56:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8667:409:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8667:409:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3210:818:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3210:818:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4875:92:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4875:92:5;;;;;;;;;;;;;;;;;;;;;;;;;;4449:203;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4449:203:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3104:132:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3104:132:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;10374:142:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10374:142:4;;;;;;;;;;;;;;;;;;;;;;;;;;2003:26:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2003:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;7023:362:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7023:362:6;;;;;;8182:198:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8182:198:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;415:51:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;415:51:7;;;;;;;;;;;;;;;;;;;;;;;3581:33:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3581:33:6;;;;;;;;;;;;;;;;;;;;;;;;;;;843:475:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;843:475:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;4102:124:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4102:124:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4589:208:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4589:208:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;4748:35:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4748:35:4;;;;;;;;;;;;;;;;;;;;;;;5298:961:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5298:961:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4044:83:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4044:83:2;;;;;;8844:875:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8844:875:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;8844:875:8;;;;;;;;;;;;;;;;;13304:1626:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13304:1626:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5416:51:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5416:51:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5221:145:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5221:145:3;;;;;;743:36:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;743:36:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;743:36:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4251:410:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4251:410:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4659:1022:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4659:1022:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1868:25:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1868:25:2;;;;;;;;;;;;;;;;;;;;;;;;;;;978:38:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;978:38:5;;;;;;;;;;;;;;;;;;;;;;;841:36:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;841:36:8;;;;;;;;;;;;;;;;;;;;;;;;;;;1494:454:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1494:454:7;;;;;;;;;;;;;;;;;;;;;;;;;;5496:222:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5496:222:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5923:54:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5923:54:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;357:51:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;357:51:7;;;;;;;;;;;;;;;;;;;;;;;2254:137:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2254:137:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;6530:35:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6530:35:4;;;;;;;;;;;;;;;;;;;;;;;;;;;1551:182:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1551:182:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4282:735:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;742:31:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;742:31:7;;;;;;;;;;;;;;;;;;;;;;;1247:39:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1247:39:5;;;;;;;;;;;;;;;;;;;;;;;;;;;10664:1993;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1817:333:8;1888:4;946:38;;;;;;;;;;;;;;;;;;;2052:41;;;:12;:41;;;;2051:90;;;;1520:42;;;;;;;;;;;;;;;;;;;1465:35;;;;;;;;;;;;;;;;;;;1395:50;;;;;;;;;;;;;;;;;;;;;;;;1337:38;;;;;;;;;;;;;;;;;;;1280:37;;;;;;;;;;;;;;;;;;;1231:29;;;;;;;;;;;;;;;;;;;1180:31;;;;;;;;;;;;;;;;;;;1134:26;;;;;;;;;;;;;;;;;;;1093:21;;;;;;;;;;;;;;;;;;;1054:19;;;;;;;;;;;;;;;;;;;1047:68;:114;:165;:214;:271;:329;:399;:454;:516;2099:41;;;:12;:41;;;;2051:90;2043:99;;1817:333;;;:::o;1836:25:2:-;;;;;;;;;;;;;:::o;11526:353:8:-;11618:14;11693:24;;:::i;:::-;11728:13;11679:1;11653:28;;:14;;;;;;;;;;;:28;;;;11645:37;;;;;;;;11770:14;;;;;;;;;;;:26;;;11797:8;11807:19;;11770:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11770:57:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11770:57:8;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:3;8;5:12;2:2;;;30:1;27;20:12;2:2;11770:57:8;;;;;;;;;;;;;;;;;;;;;11752:75;;;;;;;;11847:24;11857:6;11865:5;11847:9;:24::i;:::-;11840:31;;11526:353;;;;;;;:::o;703:32:7:-;;;;:::o;694:42:8:-;;;;;;;;;;;;;;;;;;;;:::o;6113:420::-;3713:6:2;;;;;;;;;;;3712:7;3704:16;;;;;;;;6306:27:8;6312:10;6324:8;6306:5;:27::i;:::-;6298:36;;;;;;;;6416:23;6425:8;6435:3;6416:8;:23::i;:::-;6490:35;6499:10;6511:3;6516:8;6490:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6113:420;;:::o;1804:25:2:-;;;;;;;;;;;;;:::o;512:55:7:-;558:9;512:55;:::o;1437:485:3:-;1516:36;2147:10:2;;;;;;;;;;;2133:24;;:10;:24;;;2125:33;;;;;;;;1574:8:3;1516:67;;1786:17;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1786:40:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1786:40:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1786:40:3;;;;;;;;;;;;;;;;1778:49;;;;;;;;1897:17;1881:13;;:33;;;;;;;;;;;;;;;;;;1437:485;;:::o;7950:93:8:-;7994:4;8034:1;8018:6;:13;;;;:17;8011:24;;7950:93;:::o;5871:248:5:-;5955:4;5994:1;5985:6;:10;5977:19;;;;;;;;6110:1;6079:6;6086;6079:14;;;;;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:32;;;;6072:39;;5871:248;;;:::o;574:54:7:-;622:6;574:54;:::o;6824:39:4:-;;;;;;;;;;;;;:::o;7009:809:8:-;3713:6:2;;;;;;;;;;;3712:7;3704:16;;;;;;;;7262:1:8;7247:17;;:3;:17;;;;7239:26;;;;;;;;7524:4;7509:20;;:3;:20;;;;7501:29;;;;;;;;7600:34;7613:10;7625:8;7600:12;:34::i;:::-;7592:43;;;;;;;;7654:22;7660:5;7667:8;7654:5;:22::i;:::-;7646:31;;;;;;;;7779;7789:5;7796:3;7801:8;7779:9;:31::i;:::-;7009:809;;;:::o;1491:478:5:-;1568:38;2147:10:2;;;;;;;;;;;2133:24;;:10;:24;;;2125:33;;;;;;;;1630:8:5;1568:71;;1842:17;:31;;;:33;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1842:33:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1842:33:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1842:33:5;;;;;;;;;;;;;;;;1834:42;;;;;;;;1944:17;1930:11;;:31;;;;;;;;;;;;;;;;;;1491:478;;:::o;2823:132:2:-;2147:10;;;;;;;;;;;2133:24;;:10;:24;;;2125:33;;;;;;;;2911:1;2892:21;;:7;:21;;;;2884:30;;;;;;;;2940:7;2927:10;;:20;;;;;;;;;;;;;;;;;;2823:132;:::o;3385:::-;2147:10;;;;;;;;;;;2133:24;;:10;:24;;;2125:33;;;;;;;;3473:1;3454:21;;:7;:21;;;;3446:30;;;;;;;;3502:7;3489:10;;:20;;;;;;;;;;;;;;;;;;3385:132;:::o;1076:27:5:-;;;;:::o;1041:344:7:-;1125:16;2443:10:2;;;;;;;;;;;2429:24;;:10;:24;;;2421:33;;;;;;;;1144:6:7;1125:25;;1185:1;1165:22;;:8;:22;;;1161:77;;;1216:10;;;;;;;;;;;1205:21;;1161:77;404:4;1256:17;;:40;1248:49;;;;;;;;1310:17;;:19;;;;;;;;;;;;;1340:37;1351:1;1354;1357;1360:6;1368:8;1340:10;:37::i;:::-;;1041:344;;;:::o;2041:1003:3:-;3713:6:2;;;;;;;;;;;3712:7;3704:16;;;;;;;;2431:25:3;2437:10;2449:6;2431:5;:25::i;:::-;2423:34;;;;;;;;2673:18;2684:6;2673:10;:18::i;:::-;2672:19;2664:28;;;;;;;;2703:29;2712:6;2720:11;;;;;;;;;;;2703:8;:29::i;:::-;2874:11;;;;;;;;;;;:25;;;2914:6;2935:14;2964:12;2991:9;3015:10;2874:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2874:162:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2874:162:3;;;;2041:1003;;;;:::o;6624:313:6:-;2147:10:2;;;;;;;;;;;2133:24;;:10;:24;;;2125:33;;;;;;;;3860:6;;;;;;;;;;;3852:15;;;;;;;;6711:1:6;6688:25;;:11;;;;;;;;;;;:25;;;;6680:34;;;;;;;;6758:1;6733:27;;:13;;;;;;;;;;;:27;;;;6725:36;;;;;;;;6803:1;6780:25;;:11;;;;;;;;;;;:25;;;;6772:34;;;;;;;;6855:1;6825:32;;:18;;;;;;;;;;;:32;;;6817:41;;;;;;;;6914:15;:13;:15::i;:::-;6624:313::o;6244:56:4:-;;;;;;;;;;;;;;;;;;;;;;:::o;8667:409:5:-;8774:4;8860:18;8909:16;8816:1;8804:9;:13;8796:22;;;;;;;;8847:1;8837:7;:11;8829:20;;;;;;;;8881:6;8888:9;8881:17;;;;;;;;;;;;;;;;;;;;8860:38;;8928:6;8935:7;8928:15;;;;;;;;;;;;;;;;;;;;8909:34;;8961:52;8980:6;8988:9;8999:4;9005:7;8961:18;:52::i;:::-;:107;;;;;9030:38;9049:7;9058:9;9030:18;:38::i;:::-;8961:107;8954:114;;8667:409;;;;;;:::o;3210:818:3:-;3713:6:2;;;;;;;;;;;3712:7;3704:16;;;;;;;;3602:25:3;3608:10;3620:6;3602:5;:25::i;:::-;3594:34;;;;;;;;3647:22;3662:6;3647:14;:22::i;:::-;3639:31;;;;;;;;3681;3690:6;3698:13;;;;;;;;;;;3681:8;:31::i;:::-;3856:13;;;;;;;;;;;:27;;;3898:6;3919:14;3948:12;3975:9;3999:10;3856:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3856:164:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3856:164:3;;;;3210:818;;;;:::o;4875:92:5:-;2443:10:2;;;;;;;;;;;2429:24;;:10;:24;;;2421:33;;;;;;;;4956:3:5;4941:12;:18;;;;4875:92;:::o;4449:203::-;3713:6:2;;;;;;;;;;;3712:7;3704:16;;;;;;;;4569:26:5;4575:10;4587:7;4569:5;:26::i;:::-;4561:35;;;;;;;;4639:5;4607:20;:29;4628:7;4607:29;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;4449:203;;:::o;3104:132:2:-;2147:10;;;;;;;;;;;2133:24;;:10;:24;;;2125:33;;;;;;;;3192:1;3173:21;;:7;:21;;;;3165:30;;;;;;;;3221:7;3208:10;;:20;;;;;;;;;;;;;;;;;;3104:132;:::o;10374:142:4:-;2551:10:2;;;;;;;;;;;2537:24;;:10;:24;;;:65;;;;2592:10;;;;;;;;;;;2578:24;;:10;:24;;;2537:65;:106;;;;2633:10;;;;;;;;;;;2619:24;;:10;:24;;;2537:106;2515:139;;;;;;;;10462:9:4;10472:1;10462:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10455:19;;:4;:19;10447:28;;;;;;;;10504:4;10486:15;:22;;;;10374:142;:::o;2003:26:2:-;;;;;;;;;;;;;:::o;7023:362:6:-;7078:15;7211:20;2295:10:2;;;;;;;;;;;2281:24;;:10;:24;;;2273:33;;;;;;;;7104:4:6;7096:21;;;7078:39;;7255:12;;7250:1;7235:12;;:16;7234:33;7211:56;;7294:12;7284:7;:22;7280:98;;;7323:10;;;;;;;;;;;:19;;:43;7353:12;7343:7;:22;7323:43;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7323:43:6;7280:98;7023:362;;:::o;8182:198:8:-;8267:13;8306:15;:25;8322:8;8306:25;;;;;;;;;;;;;;;;;;;;;8298:33;;8369:1;8352:19;;:5;:19;;;;8344:28;;;;;;;;8182:198;;;:::o;415:51:7:-;461:5;415:51;:::o;3581:33:6:-;;;;;;;;;;;;;:::o;843:475:3:-;920:34;2147:10:2;;;;;;;;;;;2133:24;;:10;:24;;;2125:33;;;;;;;;974:8:3;920:63;;1186:17;:36;;;:38;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1186:38:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1186:38:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1186:38:3;;;;;;;;;;;;;;;;1178:47;;;;;;;;1293:17;1279:11;;:31;;;;;;;;;;;;;;;;;;843:475;;:::o;4102:124:8:-;4158:13;4191:19;:27;4211:6;4191:27;;;;;;;;;;;;;;;;4184:34;;4102:124;;;:::o;4589:208:6:-;2147:10:2;;;;;;;;;;;2133:24;;:10;:24;;;2125:33;;;;;;;;3860:6;;;;;;;;;;;3852:15;;;;;;;;4736:10:6;4715:18;;:31;;;;;;;;;;;;;;;;;;4762:27;4778:10;4762:27;;;;;;;;;;;;;;;;;;;;;;4589:208;:::o;4748:35:4:-;;;;:::o;5298:961:6:-;5387:16;5414:12;5437:21;5469:20;5500;5531:17;5559:16;5586:14;5611:18;5640:13;5672:17;5692:6;5699:3;5692:11;;;;;;;;;;;;;;;;;;;;5672:31;;5811:1;5789:5;:18;;;;;;;;;;;;:23;;;;5774:39;;5861:12;5835:5;:22;;;;;;;;;;;;:38;;;;5824:50;;5909:5;:19;;;;;;;;;;;;5901:28;;5885:44;;5963:5;:22;;;;;;;;;;;;5955:31;;5940:46;;6020:5;:18;;;;;;;;;;;;6012:27;;5997:42;;6070:5;:15;;;;;;;;;;;;6062:24;;6050:36;;6116:5;:14;;;;;;;;;;;;6108:23;;6097:34;;6159:5;:12;;;;;;;;;;;;6151:21;;6142:30;;6204:5;:16;;;;;;;;;;;;6196:25;;6183:38;;6240:5;:11;;;6232:19;;5298:961;;;;;;;;;;;;:::o;4044:83:2:-;2551:10;;;;;;;;;;;2537:24;;:10;:24;;;:65;;;;2592:10;;;;;;;;;;;2578:24;;:10;:24;;;2537:65;:106;;;;2633:10;;;;;;;;;;;2619:24;;:10;:24;;;2537:106;2515:139;;;;;;;;3713:6;;;;;;;;;;;3712:7;3704:16;;;;;;;;4115:4;4106:6;;:13;;;;;;;;;;;;;;;;;;4044:83::o;8844:875:8:-;8905:21;8939:18;9120:23;9186:17;9234:19;9418:13;8960:17;8970:6;8960:9;:17::i;:::-;8939:38;;9008:1;8994:10;:15;8990:722;;;9085:1;9071:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;9071:16:8;;;;9064:23;;;;8990:722;9160:10;9146:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;9146:25:8;;;;9120:51;;9206:13;:11;:13::i;:::-;9186:33;;9256:1;9234:23;;9461:1;9453:9;;9448:223;9473:9;9464:5;:18;;9448:223;;;9542:6;9516:32;;:15;:22;9532:5;9516:22;;;;;;;;;;;;;;;;;;;;;:32;;;9512:144;;;9595:5;9573:6;9580:11;9573:19;;;;;;;;;;;;;;;;;:27;;;;;9623:13;;;;;;;9512:144;9484:7;;;;;;;9448:223;;;9694:6;9687:13;;8844:875;;;;;;;;;:::o;13304:1626:5:-;13400:7;13480:18;13801:14;13848:16;13964;14176:18;14318:13;14371;3713:6:2;;;;;;;;;;;3712:7;3704:16;;;;;;;;13501:6:5;13508:9;13501:17;;;;;;;;;;;;;;;;;;;;13480:38;;13609:1;13589:6;:16;;;;;;;;;;;;:21;;;;13581:30;;;;;;;;13707:27;13727:6;13707:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:19;:27::i;:::-;13699:36;;;;;;;;13818:6;:19;;;;;;;;;;;;13801:36;;;;13867:6;13874;13867:14;;;;;;;;;;;;;;;;;;;;13848:33;;13983:6;:17;;;;;;;;;;;;13964:36;;14033:6;:17;;;;;;;;;;;;14015:35;;:4;:15;;;;;;;;;;;;:35;;;14011:95;;;14079:4;:15;;;;;;;;;;;;14067:27;;14011:95;14197:11;;;;;;;;;;;:20;;;14218:6;:12;;;14232:4;:10;;;14270:1;14244:6;:23;;;;;;;;;;;;:27;14197:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14197:75:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14197:75:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14197:75:5;;;;;;;;;;;;;;;;14176:96;;14334:15;:26;14350:9;14334:26;;;;;;;;;;;;;;;;;;;;;14318:42;;14387:76;14398:9;14409:6;:19;;;;;;;;;;;;14387:76;;14442:1;14430:9;:13;14387:76;;14445:10;14457:5;14387:10;:76::i;:::-;14371:92;;14629:6;:19;;;14622:26;;;;;;;;;;;14728:12;;:14;;;;;;;;;;;;;;14825:10;:19;;:33;14845:12;;14825:33;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14825:33:5;14917:5;14910:12;;13304:1626;;;;;;;;;;:::o;5416:51:4:-;;;;;;;;;;;;;;;;;;;;;;:::o;5221:145:3:-;2551:10:2;;;;;;;;;;;2537:24;;:10;:24;;;:65;;;;2592:10;;;;;;;;;;;2578:24;;:10;:24;;;2537:65;:106;;;;2633:10;;;;;;;;;;;2619:24;;:10;:24;;;2537:106;2515:139;;;;;;;;5287:11:3;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5287:29:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5287:29:3;;;;5327:13;;;;;;;;;;;:29;;;:31;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5327:31:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5327:31:3;;;;5221:145::o;743:36:8:-;;;;;;;;;;;;;;;;;;;;:::o;4251:410:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4659:1022:8:-;3713:6:2;;;;;;;;;;;3712:7;3704:16;;;;;;;;4884:1:8;4869:17;;:3;:17;;;;4861:26;;;;;;;;5146:4;5131:20;;:3;:20;;;;5123:29;;;;;;;;5391:11;;;;;;;;;;;5376:27;;:3;:27;;;;5368:36;;;;;;;;5438:13;;;;;;;;;;;5423:29;;:3;:29;;;;5415:38;;;;;;;;5518:27;5524:10;5536:8;5518:5;:27::i;:::-;5510:36;;;;;;;;5637;5647:10;5659:3;5664:8;5637:9;:36::i;:::-;4659:1022;;:::o;1868:25:2:-;;;;;;;;;;;;;:::o;978:38:5:-;;;;:::o;841:36:8:-;;;;;;;;;;;;;:::o;1494:454:7:-;1625:13;2443:10:2;;;;;;;;;;;2429:24;;:10;:24;;;2421:33;;;;;;;;461:5:7;1573:16;;:38;1565:47;;;;;;;;1641:42;1652:1;1655;1658;1661:6;1677:4;1641:10;:42::i;:::-;1625:58;;1694:28;1703:5;1710:11;;;;;;;;;;;1694:8;:28::i;:::-;1735:11;;;;;;;;;;;:25;;;1775:5;1795:23;:21;:23::i;:::-;1833:1;622:6;1893:4;1735:174;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1735:174:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1735:174:7;;;;1922:16;;:18;;;;;;;;;;;;;1494:454;;:::o;5496:222:5:-;5584:4;5636:17;5623:1;5614:6;:10;5606:19;;;;;;;;5656:6;5663;5656:14;;;;;;;;;;;;;;;;;;;;5636:34;;5688:22;5704:5;5688:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:15;:22::i;:::-;5681:29;;5496:222;;;;:::o;5923:54:4:-;;;;;;;;;;;;;;;;;;;;;;:::o;357:51:7:-;404:4;357:51;:::o;2254:137:8:-;2147:10:2;;;;;;;;;;;2133:24;;:10;:24;;;2125:33;;;;;;;;2366:16:8;2334:14;;:49;;;;;;;;;;;;;;;;;;2254:137;:::o;6530:35:4:-;;;;;;;;;;;;;:::o;1551:182:9:-;1607:7;1627:13;1643:11;:20;1655:7;1643:20;;;;;;;;;;;;;;;;;;;;;1627:36;;1699:1;1682:19;;:5;:19;;;;1674:28;;;;;;;;1720:5;1713:12;;1551:182;;;;:::o;4282:735:3:-;4704:20;3713:6:2;;;;;;;;;;;3712:7;3704:16;;;;;;;;4501:28:3;4507:10;4519:9;4501:5;:28::i;:::-;4493:37;;;;;;;;4549:25;4564:9;4549:14;:25::i;:::-;4541:34;;;;;;;;4594:43;4618:9;4629:7;4594:23;:43::i;:::-;4586:52;;;;;;;;4727:13;;;;;;;;;;;:29;;;4757:7;4727:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4727:38:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4727:38:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4727:38:3;;;;;;;;;;;;;;;;4704:61;;4812:12;;4797;:27;4784:9;:40;;4776:49;;;;;;;;4894:13;;;;;;;;;;;:17;;;4930:12;;4918:9;:24;4944:7;4894:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4894:58:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4894:58:3;;;;;4963:46;4981:9;4963:46;;5000:7;4963:46;;:10;:46::i;:::-;4282:735;;;:::o;742:31:7:-;;;;:::o;1247:39:5:-;;;;;;;;;;;;;:::o;10664:1993::-;11971:18;12201:16;3713:6:2;;;;;;;;;;;3712:7;3704:16;;;;;;;;10850:12:5;;10837:9;:25;;10829:34;;;;;;;;10924:28;10930:10;10942:9;10924:5;:28::i;:::-;10916:37;;;;;;;;11866:38;11885:7;11894:9;11866:18;:38::i;:::-;11858:47;;;;;;;;11992:6;11999:9;11992:17;;;;;;;;;;;;;;;;;;;;11971:38;;12113:23;12129:6;12113:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:15;:23::i;:::-;12105:32;;;;;;;;12220:6;12227:7;12220:15;;;;;;;;;;;;;;;;;;;;12201:34;;12337:21;12353:4;12337:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:15;:21::i;:::-;12329:30;;;;;;;;12438:115;12471:6;12492:9;12516:4;12535:7;12438:18;:115::i;:::-;12430:124;;;;;;;;12619:30;12630:9;12641:7;12619:10;:30::i;:::-;10664:1993;;;;:::o;10860:416:8:-;10946:6;10965:16;11020:17;11048:16;10995:13;10984:25;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;10984:25:8;;;;10965:44;;11132:2;11118:12;11114:21;11101:34;;11161:9;11149:21;;11193:43;11201:9;11212:8;11222:13;11193:7;:43::i;:::-;11256:12;11249:19;;10860:416;;;;;;;:::o;2809:145::-;2884:4;2937:9;2908:38;;:15;:25;2924:8;2908:25;;;;;;;;;;;;;;;;;;;;;:38;;;2901:45;;2809:145;;;;:::o;3798:123::-;3904:9;3873:18;:28;3892:8;3873:28;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3798:123;;:::o;3193:155::-;3275:4;3331:9;3299:41;;:18;:28;3318:8;3299:28;;;;;;;;;;;;;;;;;;;;;:41;;;3292:48;;3193:155;;;;:::o;6939:774:4:-;7105:19;:24;7125:3;7105:24;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;7201:3;7173:15;:25;7189:8;7173:25;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;7323:1;7306:19;;:5;:19;;;;7302:321;;;7342:19;:26;7362:5;7342:26;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;7466:20;:30;7487:8;7466:30;;;;;;;;;;;;7459:37;;;;;;;;;;;7583:18;:28;7602:8;7583:28;;;;;;;;;;;;7576:35;;;;;;;;;;;7302:321;7675:30;7684:5;7691:3;7696:8;7675:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6939:774;;;:::o;8382:1904::-;8579:4;9174:20;9312:15;;:::i;:::-;9655:16;8963:9;8948:26;;8935:9;:39;8927:48;;;;;;;;9020:7;9005:24;;8994:7;:35;8986:44;;;;;;;;9079:11;9064:28;;9049:11;:43;9041:52;;;;;;;;9218:1;9204:11;:15;;;;;;;;9174:46;;9251:2;9235:13;:18;;;9231:69;;;9286:2;9270:18;;9231:69;9330:314;;;;;;;;;9356:6;9330:314;;;;9395:3;9330:314;;;;;;9432:1;9330:314;;;;;;9465:9;9330:314;;;;;;9505:7;9330:314;;;;;;9542:1;9330:314;;;;;;9573:13;9330:314;;;;;;9620:11;9330:314;;;;;9312:332;;9694:1;9674:6;9686:4;9674:17;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;9674:17:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:21;9655:40;;9883:8;9868:25;;9856:8;:37;9848:46;;;;;;;;9945:157;9965:6;9986:8;10017:4;:13;;;10009:22;;10054:4;:11;;;10046:20;;10081:4;:10;;;9945:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10220:30;10230:1;10233:6;10241:8;10220:9;:30::i;:::-;10270:8;10263:15;;8382:1904;;;;;;;;;;:::o;4422:129:2:-;2147:10;;;;;;;;;;;2133:24;;:10;:24;;;2125:33;;;;;;;;3860:6;;;;;;;;;;;3852:15;;;;;;;;4538:5;4529:6;;:14;;;;;;;;;;;;;;;;;;4422:129::o;6529:1216:5:-;6724:4;6808:7;6795:9;:20;6791:65;;;6839:5;6832:12;;;;6791:65;6944:7;6924;:16;;;;;;;;;;;;:27;;;:56;;;;6973:7;6955;:14;;;;;;;;;;;;:25;;;6924:56;6920:101;;;7004:5;6997:12;;;;6920:101;7053:9;7035:5;:14;;;;;;;;;;;;:27;;;:56;;;;7082:9;7066:5;:12;;;;;;;;;;;;:25;;;7035:56;7031:101;;;7115:5;7108:12;;;;7031:101;7290:1;7272:5;:14;;;;;;;;;;;;:19;;;:44;;;;7315:1;7295:7;:16;;;;;;;;;;;;:21;;;7272:44;7268:88;;;7340:4;7333:11;;;;7268:88;7450:7;:16;;;;;;;;;;;;7432:34;;:5;:14;;;;;;;;;;;;:34;;;:70;;;;7488:7;:14;;;;;;;;;;;;7470:32;;:5;:14;;;;;;;;;;;;:32;;;7432:70;7428:115;;;7526:5;7519:12;;;;7428:115;7573:7;:16;;;;;;;;;;;;7557:32;;:5;:12;;;;;;;;;;;;:32;;;:66;;;;7609:7;:14;;;;;;;;;;;;7593:30;;:5;:12;;;;;;;;;;;;:30;;;7557:66;7553:111;;;7647:5;7640:12;;;;7553:111;7733:4;7726:11;;6529:1216;;;;;;;:::o;2805:444::-;2892:4;2909:19;2968:17;2931:15;:26;2947:9;2931:26;;;;;;;;;;;;;;;;;;;;;2909:48;;2988:15;:24;3004:7;2988:24;;;;;;;;;;;;;;;;;;;;;2968:44;;3183:9;3168:24;;:11;:24;;;:72;;;;3229:11;3196:44;;:20;:29;3217:7;3196:29;;;;;;;;;;;;;;;;;;;;;:44;;;3168:72;3160:81;;2805:444;;;;;;:::o;5090:177::-;5154:4;5203:1;5179:7;:20;;;:25;;;;5178:81;;;;;5245:12;5210:48;;:7;:24;;;:48;;;;5178:81;5171:88;;5090:177;;;:::o;2073:513:7:-;2129:7;2149:16;2339:17;2168:11;;;;;;;;;;;:32;;;:34;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2168:34:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2168:34:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2168:34:7;;;;;;;;;;;;;;;;2149:53;;2315:8;2299:26;;2287:8;:38;2279:47;;;;;;;;2382:1;2371:8;:12;;;;;;;;2359:8;:25;2339:45;;558:9;2459;:31;2455:95;;;558:9;2507:31;;2455:95;2569:9;2562:16;;2073:513;;;:::o;2167:400:5:-;2225:4;2506:1;2485:4;:17;;;:22;;;2484:75;;;;;2545:12;2513:45;;:4;:21;;;:45;;;;2484:75;2477:82;;2167:400;;;:::o;7926:302::-;8045:4;8067:18;8116:16;8088:6;8095:9;8088:17;;;;;;;;;;;;;;;;;;;;8067:38;;8135:6;8142:7;8135:15;;;;;;;;;;;;;;;;;;;;8116:34;;8168:52;8187:6;8195:9;8206:4;8212:7;8168:18;:52::i;:::-;8161:59;;7926:302;;;;;;:::o;9214:940::-;9348:16;9393:18;9367:6;9374:7;9367:15;;;;;;;;;;;;;;;;;;;;9348:34;;9414:6;9421:9;9414:17;;;;;;;;;;;;;;;;;;;;9393:38;;9548:7;9519:6;:19;;;:37;;;;;;;;;;;;;;;;;;9620:22;9637:4;9620:16;:22::i;:::-;9653:24;9670:6;9653:16;:24::i;:::-;9834:20;:31;9855:9;9834:31;;;;;;;;;;;;9827:38;;;;;;;;;;;9883:20;:29;9904:7;9883:29;;;;;;;;;;;;9876:36;;;;;;;;;;;9995:12;;:14;;;;;;;;;;;;;10065:81;10074:15;:26;10090:9;10074:26;;;;;;;;;;;;;;;;;;;;;10102:9;10113:7;10122:6;:23;;;;;;;;;;;;10065:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9214:940;;;;:::o;9995:582:8:-;10342:12;10121:176;10135:2;10127:4;:10;;10121:176;;;10214:4;10208:11;10201:5;10194:26;10258:2;10249:11;;;;10283:2;10275:10;;;;10147:2;10139:10;;;;10121:176;;;10378:1;10370:4;10365:2;:9;10357:3;:18;:22;10342:37;;10450:4;10446:9;10439:4;10433:11;10429:27;10504:4;10496:5;10490:12;10486:23;10550:7;10540:8;10537:21;10530:5;10523:36;10399:171;;;;;;:::o;3516:604:5:-;3769:12;3750:15;;3717:9;3727:7;:21;;;;;;;;;;;;3717:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:48;;;;;;;;;;3716:65;3682:7;:24;;;:100;;;;;;;;;;;;;;;;;;4056:2;4032:7;:21;;;;;;;;;;;;:26;;;4028:85;;;4100:1;4075:7;:21;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4028:85;3516:604;:::o;446:6942:6:-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;446:6942:6;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// CryptoKitties Source code\r\n// Copied from: https://etherscan.io/address/0x06012c8cf97bead5deae237070f9587f8e7a266d#code\r\n\r\npragma solidity ^0.4.25;\r\n\r\nimport \"./DogMinting.sol\";\r\n\r\n\r\n/// @title CryptoKitties: Collectible, breedable, and oh-so-adorable cats on the Ethereum blockchain.\r\n/// @author Axiom Zen (https://www.axiomzen.co)\r\n/// @dev The main CryptoKitties contract, keeps track of kittens so they don't wander around and get lost.\r\ncontract DogCore is DogMinting {\r\n\r\n    // This is the main CryptoKitties contract. In order to keep our code seperated into logical sections,\r\n    // we've broken it up in two ways. First, we have several seperately-instantiated sibling contracts\r\n    // that handle auctions and our super-top-secret genetic combination algorithm. The auctions are\r\n    // seperate since their logic is somewhat complex and there's always a risk of subtle bugs. By keeping\r\n    // them in their own contracts, we can upgrade them without disrupting the main contract that tracks\r\n    // kitty ownership. The genetic combination algorithm is kept seperate so we can open-source all of\r\n    // the rest of our code without making it _too_ easy for folks to figure out how the genetics work.\r\n    // Don't worry, I'm sure someone will reverse engineer it soon enough!\r\n    //\r\n    // Secondly, we break the core contract into multiple files using inheritence, one for each major\r\n    // facet of functionality of CK. This allows us to keep related code bundled together while still\r\n    // avoiding a single giant file with everything in it. The breakdown is as follows:\r\n    //\r\n    //      - KittyBase: This is where we define the most fundamental code shared throughout the core\r\n    //             functionality. This includes our main data storage, constants and data types, plus\r\n    //             internal functions for managing these items.\r\n    //\r\n    //      - KittyAccessControl: This contract manages the various addresses and constraints for operations\r\n    //             that can be executed only by specific roles. Namely CEO, CFO and COO.\r\n    //\r\n    //      - KittyOwnership: This provides the methods required for basic non-fungible token\r\n    //             transactions, following the draft ERC-721 spec (https://github.com/ethereum/EIPs/issues/721).\r\n    //\r\n    //      - KittyBreeding: This file contains the methods necessary to breed cats together, including\r\n    //             keeping track of siring offers, and relies on an external genetic combination contract.\r\n    //\r\n    //      - KittyAuctions: Here we have the public methods for auctioning or bidding on cats or siring\r\n    //             services. The actual auction functionality is handled in two sibling contracts (one\r\n    //             for sales and one for siring), while auction creation and bidding is mostly mediated\r\n    //             through this facet of the core contract.\r\n    //\r\n    //      - KittyMinting: This final facet contains the functionality we use for creating new gen0 cats.\r\n    //             We can make up to 5000 \"promo\" cats that can be given away (especially important when\r\n    //             the community is new), and all others can only be created and then immediately put up\r\n    //             for auction via an algorithmically determined starting price. Regardless of how they\r\n    //             are created, there is a hard limit of 50k gen0 cats. After that, it's all up to the\r\n    //             community to breed, breed, breed!\r\n\r\n    // Set in case the core contract is broken and an upgrade is required\r\n    address public newContractAddress;\r\n\r\n    /// @notice Creates the main CryptoKitties smart contract instance.\r\n    constructor() public {\r\n        // Starts paused.\r\n        paused = true;\r\n\r\n        // the creator of the contract is the initial CEO\r\n        ceoAddress = msg.sender;\r\n\r\n        // the creator of the contract is also the initial COO\r\n        cooAddress = msg.sender;\r\n\r\n        // start with the mythical kitten 0 - so we don't have generation-0 parent issues\r\n        _createDog(0, 0, 0, uint256(-1), address(0));\r\n    }\r\n\r\n    /// @dev Used to mark the smart contract as upgraded, in case there is a serious\r\n    ///  breaking bug. This method does nothing but keep track of the new contract and\r\n    ///  emit a message indicating that the new address is set. It's up to clients of this\r\n    ///  contract to update to the new contract address in that case. (This contract will\r\n    ///  be paused indefinitely if such an upgrade takes place.)\r\n    /// @param _v2Address new address\r\n    function setNewAddress(address _v2Address) external onlyCEO whenPaused {\r\n        // See README.md for updgrade plan\r\n        newContractAddress = _v2Address;\r\n        emit ContractUpgrade(_v2Address);\r\n    }\r\n\r\n    /// @notice No tipping!\r\n    /// @dev Reject all Ether from being sent here, unless it's from one of the\r\n    ///  two auction contracts. (Hopefully, we can prevent user accidents.)\r\n    function() external payable {\r\n        require(\r\n            msg.sender == address(saleAuction) ||\r\n            msg.sender == address(siringAuction)\r\n        );\r\n    }\r\n\r\n    /// @notice Returns all the relevant information about a specific kitty.\r\n    /// @param _id The ID of the kitty of interest.\r\n    function getDog(uint256 _id)\r\n        external\r\n        view\r\n        returns (\r\n        bool isGestating,\r\n        bool isReady,\r\n        uint256 cooldownIndex,\r\n        uint256 nextActionAt,\r\n        uint256 siringWithId,\r\n        uint256 birthTime,\r\n        uint256 matronId,\r\n        uint256 sireId,\r\n        uint256 generation,\r\n        uint256 genes\r\n    ) {\r\n        Dog storage stock = kennel[_id];\r\n\r\n        // if this variable is 0 then it's not gestating\r\n        isGestating = (stock.siringWithId != 0);\r\n        isReady = (stock.cooldownEndBlock <= block.number);\r\n        cooldownIndex = uint256(stock.cooldownIndex);\r\n        nextActionAt = uint256(stock.cooldownEndBlock);\r\n        siringWithId = uint256(stock.siringWithId);\r\n        birthTime = uint256(stock.birthTime);\r\n        matronId = uint256(stock.matronId);\r\n        sireId = uint256(stock.sireId);\r\n        generation = uint256(stock.generation);\r\n        genes = stock.genes;\r\n    }\r\n\r\n    /// @dev Override unpause so it requires all external contract addresses\r\n    ///  to be set before contract can be unpaused. Also, we can't have\r\n    ///  newContractAddress set either, because then the contract was upgraded.\r\n    /// @notice This is public rather than external so we can call super.unpause\r\n    ///  without using an expensive CALL.\r\n    function unpause() public onlyCEO whenPaused {\r\n        require(saleAuction != address(0));\r\n        require(siringAuction != address(0));\r\n        require(geneScience != address(0));\r\n        require(newContractAddress == address(0));\r\n\r\n        // Actually unpause the contract.\r\n        super.unpause();\r\n    }\r\n\r\n    // @dev Allows the CFO to capture the balance available to the contract.\r\n    function withdrawBalance() external onlyCFO {\r\n        uint256 balance = address(this).balance;\r\n        // Subtract all the currently pregnant kittens we have, plus 1 of margin.\r\n        uint256 subtractFees = (pregnantDogs + 1) * autoBirthFee;\r\n\r\n        if (balance > subtractFees) {\r\n            cfoAddress.transfer(balance - subtractFees);\r\n        }\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\CTrov\\OneDrive\\Documents\\ESILV\\BLOCKCHAIN PROGRAMMING\\Blockchain_Programming_TD6\\contracts\\DogCore.sol",
  "ast": {
    "absolutePath": "/C/Users/CTrov/OneDrive/Documents/ESILV/BLOCKCHAIN PROGRAMMING/Blockchain_Programming_TD6/contracts/DogCore.sol",
    "exportedSymbols": {
      "DogCore": [
        2302
      ]
    },
    "id": 2303,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2044,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "126:24:6"
      },
      {
        "absolutePath": "/C/Users/CTrov/OneDrive/Documents/ESILV/BLOCKCHAIN PROGRAMMING/Blockchain_Programming_TD6/contracts/DogMinting.sol",
        "file": "./DogMinting.sol",
        "id": 2045,
        "nodeType": "ImportDirective",
        "scope": 2303,
        "sourceUnit": 2456,
        "src": "154:26:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2046,
              "name": "DogMinting",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2455,
              "src": "466:10:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DogMinting_$2455",
                "typeString": "contract DogMinting"
              }
            },
            "id": 2047,
            "nodeType": "InheritanceSpecifier",
            "src": "466:10:6"
          }
        ],
        "contractDependencies": [
          854,
          1082,
          1396,
          2042,
          2455,
          2995,
          3120
        ],
        "contractKind": "contract",
        "documentation": "@dev The main CryptoKitties contract, keeps track of kittens so they don't wander around and get lost.",
        "fullyImplemented": true,
        "id": 2302,
        "linearizedBaseContracts": [
          2302,
          2455,
          1082,
          2042,
          2995,
          3120,
          1396,
          854
        ],
        "name": "DogCore",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2049,
            "name": "newContractAddress",
            "nodeType": "VariableDeclaration",
            "scope": 2302,
            "src": "3581:33:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2048,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3581:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2079,
              "nodeType": "Block",
              "src": "3717:402:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2052,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 698,
                      "src": "3755:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3764:4:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3755:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2055,
                  "nodeType": "ExpressionStatement",
                  "src": "3755:13:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2056,
                      "name": "ceoAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 691,
                      "src": "3840:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2057,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3688,
                        "src": "3853:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3853:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3840:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2060,
                  "nodeType": "ExpressionStatement",
                  "src": "3840:23:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2061,
                      "name": "cooAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 695,
                      "src": "3940:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2062,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3688,
                        "src": "3953:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3953:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3940:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2065,
                  "nodeType": "ExpressionStatement",
                  "src": "3940:23:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4078:1:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4081:1:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4084:1:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2072,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "4095:2:6",
                            "subExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 2071,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4096:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_-1_by_1",
                              "typeString": "int_const -1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_-1_by_1",
                              "typeString": "int_const -1"
                            }
                          ],
                          "id": 2070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4087:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint256"
                        },
                        "id": 2073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4087:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4108:1:6",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4100:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4100:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2066,
                      "name": "_createDog",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1375,
                      "src": "4067:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,address) returns (uint256)"
                      }
                    },
                    "id": 2077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4067:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2078,
                  "nodeType": "ExpressionStatement",
                  "src": "4067:44:6"
                }
              ]
            },
            "documentation": "@notice Creates the main CryptoKitties smart contract instance.",
            "id": 2080,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3707:2:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 2051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3717:0:6"
            },
            "scope": 2302,
            "src": "3696:423:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2097,
              "nodeType": "Block",
              "src": "4660:137:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2089,
                      "name": "newContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2049,
                      "src": "4715:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2090,
                      "name": "_v2Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2082,
                      "src": "4736:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4715:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2092,
                  "nodeType": "ExpressionStatement",
                  "src": "4715:31:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2094,
                        "name": "_v2Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2082,
                        "src": "4778:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2093,
                      "name": "ContractUpgrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 689,
                      "src": "4762:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4762:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2096,
                  "nodeType": "EmitStatement",
                  "src": "4757:32:6"
                }
              ]
            },
            "documentation": "@param _v2Address new address",
            "id": 2098,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2085,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2084,
                  "name": "onlyCEO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 709,
                  "src": "4641:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4641:7:6"
              },
              {
                "arguments": null,
                "id": 2087,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2086,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 829,
                  "src": "4649:10:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4649:10:6"
              }
            ],
            "name": "setNewAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2082,
                  "name": "_v2Address",
                  "nodeType": "VariableDeclaration",
                  "scope": 2098,
                  "src": "4612:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2081,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4612:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4611:20:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 2088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4660:0:6"
            },
            "scope": 2302,
            "src": "4589:208:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2117,
              "nodeType": "Block",
              "src": "5020:139:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2102,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3688,
                              "src": "5053:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5053:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2105,
                                "name": "saleAuction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1198,
                                "src": "5075:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SaleClockAuction_$3538",
                                  "typeString": "contract SaleClockAuction"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SaleClockAuction_$3538",
                                  "typeString": "contract SaleClockAuction"
                                }
                              ],
                              "id": 2104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5067:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 2106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5067:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5053:34:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2108,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3688,
                              "src": "5104:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5104:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2111,
                                "name": "siringAuction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1200,
                                "src": "5126:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SiringClockAuction_$3673",
                                  "typeString": "contract SiringClockAuction"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SiringClockAuction_$3673",
                                  "typeString": "contract SiringClockAuction"
                                }
                              ],
                              "id": 2110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5118:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 2112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5118:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5104:36:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5053:87:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3691,
                        3692
                      ],
                      "referencedDeclaration": 3691,
                      "src": "5031:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5031:120:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2116,
                  "nodeType": "ExpressionStatement",
                  "src": "5031:120:6"
                }
              ]
            },
            "documentation": "two auction contracts. (Hopefully, we can prevent user accidents.)",
            "id": 2118,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2099,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5000:2:6"
            },
            "payable": true,
            "returnParameters": {
              "id": 2100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5020:0:6"
            },
            "scope": 2302,
            "src": "4992:167:6",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2220,
              "nodeType": "Block",
              "src": "5661:598:6",
              "statements": [
                {
                  "assignments": [
                    2144
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2144,
                      "name": "stock",
                      "nodeType": "VariableDeclaration",
                      "scope": 2221,
                      "src": "5672:17:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dog_$1127_storage_ptr",
                        "typeString": "struct DogBase.Dog"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2143,
                        "name": "Dog",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1127,
                        "src": "5672:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dog_$1127_storage_ptr",
                          "typeString": "struct DogBase.Dog"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2148,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2145,
                      "name": "kennel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1180,
                      "src": "5692:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dog_$1127_storage_$dyn_storage",
                        "typeString": "struct DogBase.Dog storage ref[] storage ref"
                      }
                    },
                    "id": 2147,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2146,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2120,
                      "src": "5699:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5692:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dog_$1127_storage",
                      "typeString": "struct DogBase.Dog storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5672:31:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2149,
                      "name": "isGestating",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2123,
                      "src": "5774:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 2153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2150,
                              "name": "stock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2144,
                              "src": "5789:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dog_$1127_storage_ptr",
                                "typeString": "struct DogBase.Dog storage pointer"
                              }
                            },
                            "id": 2151,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "siringWithId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1122,
                            "src": "5789:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5811:1:6",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5789:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 2154,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5788:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5774:39:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2156,
                  "nodeType": "ExpressionStatement",
                  "src": "5774:39:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2157,
                      "name": "isReady",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2125,
                      "src": "5824:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2158,
                              "name": "stock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2144,
                              "src": "5835:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dog_$1127_storage_ptr",
                                "typeString": "struct DogBase.Dog storage pointer"
                              }
                            },
                            "id": 2159,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "cooldownEndBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1116,
                            "src": "5835:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2160,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3678,
                              "src": "5861:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5861:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5835:38:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 2163,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5834:40:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5824:50:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2165,
                  "nodeType": "ExpressionStatement",
                  "src": "5824:50:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2166,
                      "name": "cooldownIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2127,
                      "src": "5885:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2168,
                            "name": "stock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2144,
                            "src": "5909:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dog_$1127_storage_ptr",
                              "typeString": "struct DogBase.Dog storage pointer"
                            }
                          },
                          "id": 2169,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cooldownIndex",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1124,
                          "src": "5909:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 2167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5901:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5901:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5885:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2172,
                  "nodeType": "ExpressionStatement",
                  "src": "5885:44:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2173,
                      "name": "nextActionAt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2129,
                      "src": "5940:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2175,
                            "name": "stock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2144,
                            "src": "5963:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dog_$1127_storage_ptr",
                              "typeString": "struct DogBase.Dog storage pointer"
                            }
                          },
                          "id": 2176,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cooldownEndBlock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1116,
                          "src": "5963:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 2174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5955:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5955:31:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5940:46:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2179,
                  "nodeType": "ExpressionStatement",
                  "src": "5940:46:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2180,
                      "name": "siringWithId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2131,
                      "src": "5997:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2182,
                            "name": "stock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2144,
                            "src": "6020:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dog_$1127_storage_ptr",
                              "typeString": "struct DogBase.Dog storage pointer"
                            }
                          },
                          "id": 2183,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "siringWithId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1122,
                          "src": "6020:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 2181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6012:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6012:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5997:42:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2186,
                  "nodeType": "ExpressionStatement",
                  "src": "5997:42:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2187,
                      "name": "birthTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2133,
                      "src": "6050:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2189,
                            "name": "stock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2144,
                            "src": "6070:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dog_$1127_storage_ptr",
                              "typeString": "struct DogBase.Dog storage pointer"
                            }
                          },
                          "id": 2190,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "birthTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1114,
                          "src": "6070:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 2188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6062:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6062:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6050:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2193,
                  "nodeType": "ExpressionStatement",
                  "src": "6050:36:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2194,
                      "name": "matronId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2135,
                      "src": "6097:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2196,
                            "name": "stock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2144,
                            "src": "6116:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dog_$1127_storage_ptr",
                              "typeString": "struct DogBase.Dog storage pointer"
                            }
                          },
                          "id": 2197,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "matronId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1118,
                          "src": "6116:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 2195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6108:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6108:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6097:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2200,
                  "nodeType": "ExpressionStatement",
                  "src": "6097:34:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2201,
                      "name": "sireId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2137,
                      "src": "6142:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2203,
                            "name": "stock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2144,
                            "src": "6159:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dog_$1127_storage_ptr",
                              "typeString": "struct DogBase.Dog storage pointer"
                            }
                          },
                          "id": 2204,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sireId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1120,
                          "src": "6159:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 2202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6151:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6151:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6142:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2207,
                  "nodeType": "ExpressionStatement",
                  "src": "6142:30:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2208,
                      "name": "generation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2139,
                      "src": "6183:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2210,
                            "name": "stock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2144,
                            "src": "6204:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dog_$1127_storage_ptr",
                              "typeString": "struct DogBase.Dog storage pointer"
                            }
                          },
                          "id": 2211,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "generation",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1126,
                          "src": "6204:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 2209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6196:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6196:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6183:38:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2214,
                  "nodeType": "ExpressionStatement",
                  "src": "6183:38:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2215,
                      "name": "genes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2141,
                      "src": "6232:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2216,
                        "name": "stock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2144,
                        "src": "6240:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dog_$1127_storage_ptr",
                          "typeString": "struct DogBase.Dog storage pointer"
                        }
                      },
                      "id": 2217,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "genes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1112,
                      "src": "6240:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6232:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2219,
                  "nodeType": "ExpressionStatement",
                  "src": "6232:19:6"
                }
              ]
            },
            "documentation": "@param _id The ID of the kitty of interest.",
            "id": 2221,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getDog",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2120,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2221,
                  "src": "5314:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5314:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5313:13:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 2142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2123,
                  "name": "isGestating",
                  "nodeType": "VariableDeclaration",
                  "scope": 2221,
                  "src": "5387:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2122,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5387:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2125,
                  "name": "isReady",
                  "nodeType": "VariableDeclaration",
                  "scope": 2221,
                  "src": "5414:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2124,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5414:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2127,
                  "name": "cooldownIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 2221,
                  "src": "5437:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2126,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5437:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2129,
                  "name": "nextActionAt",
                  "nodeType": "VariableDeclaration",
                  "scope": 2221,
                  "src": "5469:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2128,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5469:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2131,
                  "name": "siringWithId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2221,
                  "src": "5500:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2130,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5500:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2133,
                  "name": "birthTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 2221,
                  "src": "5531:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2132,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5531:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2135,
                  "name": "matronId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2221,
                  "src": "5559:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2134,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5559:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2137,
                  "name": "sireId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2221,
                  "src": "5586:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5586:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2139,
                  "name": "generation",
                  "nodeType": "VariableDeclaration",
                  "scope": 2221,
                  "src": "5611:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5611:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2141,
                  "name": "genes",
                  "nodeType": "VariableDeclaration",
                  "scope": 2221,
                  "src": "5640:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2140,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5640:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5376:284:6"
            },
            "scope": 2302,
            "src": "5298:961:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2265,
              "nodeType": "Block",
              "src": "6669:268:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2229,
                          "name": "saleAuction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1198,
                          "src": "6688:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SaleClockAuction_$3538",
                            "typeString": "contract SaleClockAuction"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2231,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6711:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6703:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6703:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6688:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2228,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3691,
                        3692
                      ],
                      "referencedDeclaration": 3691,
                      "src": "6680:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6680:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2235,
                  "nodeType": "ExpressionStatement",
                  "src": "6680:34:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2237,
                          "name": "siringAuction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1200,
                          "src": "6733:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SiringClockAuction_$3673",
                            "typeString": "contract SiringClockAuction"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6758:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6750:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6750:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6733:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2236,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3691,
                        3692
                      ],
                      "referencedDeclaration": 3691,
                      "src": "6725:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6725:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2243,
                  "nodeType": "ExpressionStatement",
                  "src": "6725:36:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2245,
                          "name": "geneScience",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1419,
                          "src": "6780:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GeneScienceInterface_$3241",
                            "typeString": "contract GeneScienceInterface"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6803:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6795:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6795:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6780:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2244,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3691,
                        3692
                      ],
                      "referencedDeclaration": 3691,
                      "src": "6772:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6772:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2251,
                  "nodeType": "ExpressionStatement",
                  "src": "6772:34:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2253,
                          "name": "newContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2049,
                          "src": "6825:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2255,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6855:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6847:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6847:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6825:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2252,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3691,
                        3692
                      ],
                      "referencedDeclaration": 3691,
                      "src": "6817:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6817:41:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2259,
                  "nodeType": "ExpressionStatement",
                  "src": "6817:41:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2260,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3734,
                        "src": "6914:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_DogCore_$2302",
                          "typeString": "contract super DogCore"
                        }
                      },
                      "id": 2262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unpause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 853,
                      "src": "6914:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6914:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2264,
                  "nodeType": "ExpressionStatement",
                  "src": "6914:15:6"
                }
              ]
            },
            "documentation": "without using an expensive CALL.",
            "id": 2266,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2224,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2223,
                  "name": "onlyCEO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 709,
                  "src": "6650:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6650:7:6"
              },
              {
                "arguments": null,
                "id": 2226,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2225,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 829,
                  "src": "6658:10:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6658:10:6"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6640:2:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 2227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6669:0:6"
            },
            "scope": 2302,
            "src": "6624:313:6",
            "stateMutability": "nonpayable",
            "superFunction": 853,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2300,
              "nodeType": "Block",
              "src": "7067:318:6",
              "statements": [
                {
                  "assignments": [
                    2272
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2272,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2301,
                      "src": "7078:15:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2271,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7078:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2277,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2274,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3733,
                          "src": "7104:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DogCore_$2302",
                            "typeString": "contract DogCore"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_DogCore_$2302",
                            "typeString": "contract DogCore"
                          }
                        ],
                        "id": 2273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7096:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 2275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7096:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "7096:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7078:39:6"
                },
                {
                  "assignments": [
                    2279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2279,
                      "name": "subtractFees",
                      "nodeType": "VariableDeclaration",
                      "scope": 2301,
                      "src": "7211:20:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2278,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7211:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2286,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2280,
                            "name": "pregnantDogs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1417,
                            "src": "7235:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 2281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7250:1:6",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "7235:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2283,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7234:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2284,
                      "name": "autoBirthFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1415,
                      "src": "7255:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7234:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7211:56:6"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2287,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2272,
                      "src": "7284:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2288,
                      "name": "subtractFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2279,
                      "src": "7294:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7284:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2299,
                  "nodeType": "IfStatement",
                  "src": "7280:98:6",
                  "trueBody": {
                    "id": 2298,
                    "nodeType": "Block",
                    "src": "7308:70:6",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 2293,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2272,
                                "src": "7343:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 2294,
                                "name": "subtractFees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2279,
                                "src": "7353:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7343:22:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2290,
                              "name": "cfoAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 693,
                              "src": "7323:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 2292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "7323:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7323:43:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2297,
                        "nodeType": "ExpressionStatement",
                        "src": "7323:43:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 2301,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2269,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2268,
                  "name": "onlyCFO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 720,
                  "src": "7059:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7059:7:6"
              }
            ],
            "name": "withdrawBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7047:2:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 2270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7067:0:6"
            },
            "scope": 2302,
            "src": "7023:362:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2303,
        "src": "446:6942:6"
      }
    ],
    "src": "126:7262:6"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/CTrov/OneDrive/Documents/ESILV/BLOCKCHAIN PROGRAMMING/Blockchain_Programming_TD6/contracts/DogCore.sol",
    "exportedSymbols": {
      "DogCore": [
        2302
      ]
    },
    "id": 2303,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2044,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "126:24:6"
      },
      {
        "absolutePath": "/C/Users/CTrov/OneDrive/Documents/ESILV/BLOCKCHAIN PROGRAMMING/Blockchain_Programming_TD6/contracts/DogMinting.sol",
        "file": "./DogMinting.sol",
        "id": 2045,
        "nodeType": "ImportDirective",
        "scope": 2303,
        "sourceUnit": 2456,
        "src": "154:26:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2046,
              "name": "DogMinting",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2455,
              "src": "466:10:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DogMinting_$2455",
                "typeString": "contract DogMinting"
              }
            },
            "id": 2047,
            "nodeType": "InheritanceSpecifier",
            "src": "466:10:6"
          }
        ],
        "contractDependencies": [
          854,
          1082,
          1396,
          2042,
          2455,
          2995,
          3120
        ],
        "contractKind": "contract",
        "documentation": "@dev The main CryptoKitties contract, keeps track of kittens so they don't wander around and get lost.",
        "fullyImplemented": true,
        "id": 2302,
        "linearizedBaseContracts": [
          2302,
          2455,
          1082,
          2042,
          2995,
          3120,
          1396,
          854
        ],
        "name": "DogCore",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2049,
            "name": "newContractAddress",
            "nodeType": "VariableDeclaration",
            "scope": 2302,
            "src": "3581:33:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2048,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3581:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2079,
              "nodeType": "Block",
              "src": "3717:402:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2052,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 698,
                      "src": "3755:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3764:4:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3755:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2055,
                  "nodeType": "ExpressionStatement",
                  "src": "3755:13:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2056,
                      "name": "ceoAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 691,
                      "src": "3840:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2057,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3688,
                        "src": "3853:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3853:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3840:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2060,
                  "nodeType": "ExpressionStatement",
                  "src": "3840:23:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2061,
                      "name": "cooAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 695,
                      "src": "3940:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2062,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3688,
                        "src": "3953:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3953:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3940:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2065,
                  "nodeType": "ExpressionStatement",
                  "src": "3940:23:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4078:1:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4081:1:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4084:1:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2072,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "4095:2:6",
                            "subExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 2071,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4096:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_-1_by_1",
                              "typeString": "int_const -1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_-1_by_1",
                              "typeString": "int_const -1"
                            }
                          ],
                          "id": 2070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4087:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint256"
                        },
                        "id": 2073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4087:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4108:1:6",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4100:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4100:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2066,
                      "name": "_createDog",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1375,
                      "src": "4067:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,address) returns (uint256)"
                      }
                    },
                    "id": 2077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4067:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2078,
                  "nodeType": "ExpressionStatement",
                  "src": "4067:44:6"
                }
              ]
            },
            "documentation": "@notice Creates the main CryptoKitties smart contract instance.",
            "id": 2080,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3707:2:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 2051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3717:0:6"
            },
            "scope": 2302,
            "src": "3696:423:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2097,
              "nodeType": "Block",
              "src": "4660:137:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2089,
                      "name": "newContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2049,
                      "src": "4715:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2090,
                      "name": "_v2Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2082,
                      "src": "4736:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4715:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2092,
                  "nodeType": "ExpressionStatement",
                  "src": "4715:31:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2094,
                        "name": "_v2Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2082,
                        "src": "4778:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2093,
                      "name": "ContractUpgrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 689,
                      "src": "4762:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4762:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2096,
                  "nodeType": "EmitStatement",
                  "src": "4757:32:6"
                }
              ]
            },
            "documentation": "@param _v2Address new address",
            "id": 2098,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2085,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2084,
                  "name": "onlyCEO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 709,
                  "src": "4641:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4641:7:6"
              },
              {
                "arguments": null,
                "id": 2087,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2086,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 829,
                  "src": "4649:10:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4649:10:6"
              }
            ],
            "name": "setNewAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2082,
                  "name": "_v2Address",
                  "nodeType": "VariableDeclaration",
                  "scope": 2098,
                  "src": "4612:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2081,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4612:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4611:20:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 2088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4660:0:6"
            },
            "scope": 2302,
            "src": "4589:208:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2117,
              "nodeType": "Block",
              "src": "5020:139:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2102,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3688,
                              "src": "5053:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5053:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2105,
                                "name": "saleAuction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1198,
                                "src": "5075:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SaleClockAuction_$3538",
                                  "typeString": "contract SaleClockAuction"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SaleClockAuction_$3538",
                                  "typeString": "contract SaleClockAuction"
                                }
                              ],
                              "id": 2104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5067:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 2106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5067:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5053:34:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2108,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3688,
                              "src": "5104:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5104:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2111,
                                "name": "siringAuction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1200,
                                "src": "5126:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SiringClockAuction_$3673",
                                  "typeString": "contract SiringClockAuction"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SiringClockAuction_$3673",
                                  "typeString": "contract SiringClockAuction"
                                }
                              ],
                              "id": 2110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5118:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 2112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5118:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5104:36:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5053:87:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3691,
                        3692
                      ],
                      "referencedDeclaration": 3691,
                      "src": "5031:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5031:120:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2116,
                  "nodeType": "ExpressionStatement",
                  "src": "5031:120:6"
                }
              ]
            },
            "documentation": "two auction contracts. (Hopefully, we can prevent user accidents.)",
            "id": 2118,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2099,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5000:2:6"
            },
            "payable": true,
            "returnParameters": {
              "id": 2100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5020:0:6"
            },
            "scope": 2302,
            "src": "4992:167:6",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2220,
              "nodeType": "Block",
              "src": "5661:598:6",
              "statements": [
                {
                  "assignments": [
                    2144
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2144,
                      "name": "stock",
                      "nodeType": "VariableDeclaration",
                      "scope": 2221,
                      "src": "5672:17:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dog_$1127_storage_ptr",
                        "typeString": "struct DogBase.Dog"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2143,
                        "name": "Dog",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1127,
                        "src": "5672:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dog_$1127_storage_ptr",
                          "typeString": "struct DogBase.Dog"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2148,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2145,
                      "name": "kennel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1180,
                      "src": "5692:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dog_$1127_storage_$dyn_storage",
                        "typeString": "struct DogBase.Dog storage ref[] storage ref"
                      }
                    },
                    "id": 2147,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2146,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2120,
                      "src": "5699:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5692:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dog_$1127_storage",
                      "typeString": "struct DogBase.Dog storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5672:31:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2149,
                      "name": "isGestating",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2123,
                      "src": "5774:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 2153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2150,
                              "name": "stock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2144,
                              "src": "5789:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dog_$1127_storage_ptr",
                                "typeString": "struct DogBase.Dog storage pointer"
                              }
                            },
                            "id": 2151,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "siringWithId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1122,
                            "src": "5789:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5811:1:6",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5789:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 2154,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5788:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5774:39:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2156,
                  "nodeType": "ExpressionStatement",
                  "src": "5774:39:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2157,
                      "name": "isReady",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2125,
                      "src": "5824:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2158,
                              "name": "stock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2144,
                              "src": "5835:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dog_$1127_storage_ptr",
                                "typeString": "struct DogBase.Dog storage pointer"
                              }
                            },
                            "id": 2159,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "cooldownEndBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1116,
                            "src": "5835:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2160,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3678,
                              "src": "5861:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5861:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5835:38:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 2163,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5834:40:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5824:50:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2165,
                  "nodeType": "ExpressionStatement",
                  "src": "5824:50:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2166,
                      "name": "cooldownIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2127,
                      "src": "5885:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2168,
                            "name": "stock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2144,
                            "src": "5909:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dog_$1127_storage_ptr",
                              "typeString": "struct DogBase.Dog storage pointer"
                            }
                          },
                          "id": 2169,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cooldownIndex",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1124,
                          "src": "5909:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 2167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5901:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5901:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5885:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2172,
                  "nodeType": "ExpressionStatement",
                  "src": "5885:44:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2173,
                      "name": "nextActionAt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2129,
                      "src": "5940:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2175,
                            "name": "stock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2144,
                            "src": "5963:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dog_$1127_storage_ptr",
                              "typeString": "struct DogBase.Dog storage pointer"
                            }
                          },
                          "id": 2176,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cooldownEndBlock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1116,
                          "src": "5963:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 2174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5955:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5955:31:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5940:46:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2179,
                  "nodeType": "ExpressionStatement",
                  "src": "5940:46:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2180,
                      "name": "siringWithId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2131,
                      "src": "5997:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2182,
                            "name": "stock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2144,
                            "src": "6020:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dog_$1127_storage_ptr",
                              "typeString": "struct DogBase.Dog storage pointer"
                            }
                          },
                          "id": 2183,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "siringWithId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1122,
                          "src": "6020:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 2181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6012:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6012:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5997:42:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2186,
                  "nodeType": "ExpressionStatement",
                  "src": "5997:42:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2187,
                      "name": "birthTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2133,
                      "src": "6050:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2189,
                            "name": "stock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2144,
                            "src": "6070:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dog_$1127_storage_ptr",
                              "typeString": "struct DogBase.Dog storage pointer"
                            }
                          },
                          "id": 2190,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "birthTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1114,
                          "src": "6070:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 2188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6062:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6062:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6050:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2193,
                  "nodeType": "ExpressionStatement",
                  "src": "6050:36:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2194,
                      "name": "matronId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2135,
                      "src": "6097:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2196,
                            "name": "stock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2144,
                            "src": "6116:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dog_$1127_storage_ptr",
                              "typeString": "struct DogBase.Dog storage pointer"
                            }
                          },
                          "id": 2197,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "matronId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1118,
                          "src": "6116:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 2195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6108:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6108:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6097:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2200,
                  "nodeType": "ExpressionStatement",
                  "src": "6097:34:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2201,
                      "name": "sireId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2137,
                      "src": "6142:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2203,
                            "name": "stock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2144,
                            "src": "6159:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dog_$1127_storage_ptr",
                              "typeString": "struct DogBase.Dog storage pointer"
                            }
                          },
                          "id": 2204,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sireId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1120,
                          "src": "6159:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 2202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6151:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6151:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6142:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2207,
                  "nodeType": "ExpressionStatement",
                  "src": "6142:30:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2208,
                      "name": "generation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2139,
                      "src": "6183:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2210,
                            "name": "stock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2144,
                            "src": "6204:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dog_$1127_storage_ptr",
                              "typeString": "struct DogBase.Dog storage pointer"
                            }
                          },
                          "id": 2211,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "generation",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1126,
                          "src": "6204:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 2209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6196:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6196:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6183:38:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2214,
                  "nodeType": "ExpressionStatement",
                  "src": "6183:38:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2215,
                      "name": "genes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2141,
                      "src": "6232:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2216,
                        "name": "stock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2144,
                        "src": "6240:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dog_$1127_storage_ptr",
                          "typeString": "struct DogBase.Dog storage pointer"
                        }
                      },
                      "id": 2217,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "genes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1112,
                      "src": "6240:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6232:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2219,
                  "nodeType": "ExpressionStatement",
                  "src": "6232:19:6"
                }
              ]
            },
            "documentation": "@param _id The ID of the kitty of interest.",
            "id": 2221,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getDog",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2120,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2221,
                  "src": "5314:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5314:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5313:13:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 2142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2123,
                  "name": "isGestating",
                  "nodeType": "VariableDeclaration",
                  "scope": 2221,
                  "src": "5387:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2122,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5387:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2125,
                  "name": "isReady",
                  "nodeType": "VariableDeclaration",
                  "scope": 2221,
                  "src": "5414:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2124,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5414:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2127,
                  "name": "cooldownIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 2221,
                  "src": "5437:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2126,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5437:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2129,
                  "name": "nextActionAt",
                  "nodeType": "VariableDeclaration",
                  "scope": 2221,
                  "src": "5469:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2128,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5469:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2131,
                  "name": "siringWithId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2221,
                  "src": "5500:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2130,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5500:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2133,
                  "name": "birthTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 2221,
                  "src": "5531:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2132,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5531:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2135,
                  "name": "matronId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2221,
                  "src": "5559:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2134,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5559:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2137,
                  "name": "sireId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2221,
                  "src": "5586:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5586:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2139,
                  "name": "generation",
                  "nodeType": "VariableDeclaration",
                  "scope": 2221,
                  "src": "5611:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5611:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2141,
                  "name": "genes",
                  "nodeType": "VariableDeclaration",
                  "scope": 2221,
                  "src": "5640:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2140,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5640:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5376:284:6"
            },
            "scope": 2302,
            "src": "5298:961:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2265,
              "nodeType": "Block",
              "src": "6669:268:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2229,
                          "name": "saleAuction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1198,
                          "src": "6688:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SaleClockAuction_$3538",
                            "typeString": "contract SaleClockAuction"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2231,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6711:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6703:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6703:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6688:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2228,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3691,
                        3692
                      ],
                      "referencedDeclaration": 3691,
                      "src": "6680:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6680:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2235,
                  "nodeType": "ExpressionStatement",
                  "src": "6680:34:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2237,
                          "name": "siringAuction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1200,
                          "src": "6733:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SiringClockAuction_$3673",
                            "typeString": "contract SiringClockAuction"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6758:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6750:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6750:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6733:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2236,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3691,
                        3692
                      ],
                      "referencedDeclaration": 3691,
                      "src": "6725:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6725:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2243,
                  "nodeType": "ExpressionStatement",
                  "src": "6725:36:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2245,
                          "name": "geneScience",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1419,
                          "src": "6780:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GeneScienceInterface_$3241",
                            "typeString": "contract GeneScienceInterface"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6803:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6795:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6795:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6780:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2244,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3691,
                        3692
                      ],
                      "referencedDeclaration": 3691,
                      "src": "6772:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6772:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2251,
                  "nodeType": "ExpressionStatement",
                  "src": "6772:34:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2253,
                          "name": "newContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2049,
                          "src": "6825:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2255,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6855:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6847:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6847:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6825:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2252,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3691,
                        3692
                      ],
                      "referencedDeclaration": 3691,
                      "src": "6817:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6817:41:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2259,
                  "nodeType": "ExpressionStatement",
                  "src": "6817:41:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2260,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3734,
                        "src": "6914:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_DogCore_$2302",
                          "typeString": "contract super DogCore"
                        }
                      },
                      "id": 2262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unpause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 853,
                      "src": "6914:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6914:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2264,
                  "nodeType": "ExpressionStatement",
                  "src": "6914:15:6"
                }
              ]
            },
            "documentation": "without using an expensive CALL.",
            "id": 2266,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2224,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2223,
                  "name": "onlyCEO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 709,
                  "src": "6650:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6650:7:6"
              },
              {
                "arguments": null,
                "id": 2226,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2225,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 829,
                  "src": "6658:10:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6658:10:6"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6640:2:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 2227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6669:0:6"
            },
            "scope": 2302,
            "src": "6624:313:6",
            "stateMutability": "nonpayable",
            "superFunction": 853,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2300,
              "nodeType": "Block",
              "src": "7067:318:6",
              "statements": [
                {
                  "assignments": [
                    2272
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2272,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2301,
                      "src": "7078:15:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2271,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7078:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2277,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2274,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3733,
                          "src": "7104:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DogCore_$2302",
                            "typeString": "contract DogCore"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_DogCore_$2302",
                            "typeString": "contract DogCore"
                          }
                        ],
                        "id": 2273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7096:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 2275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7096:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "7096:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7078:39:6"
                },
                {
                  "assignments": [
                    2279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2279,
                      "name": "subtractFees",
                      "nodeType": "VariableDeclaration",
                      "scope": 2301,
                      "src": "7211:20:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2278,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7211:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2286,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2280,
                            "name": "pregnantDogs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1417,
                            "src": "7235:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 2281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7250:1:6",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "7235:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2283,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7234:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2284,
                      "name": "autoBirthFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1415,
                      "src": "7255:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7234:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7211:56:6"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2287,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2272,
                      "src": "7284:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2288,
                      "name": "subtractFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2279,
                      "src": "7294:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7284:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2299,
                  "nodeType": "IfStatement",
                  "src": "7280:98:6",
                  "trueBody": {
                    "id": 2298,
                    "nodeType": "Block",
                    "src": "7308:70:6",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 2293,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2272,
                                "src": "7343:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 2294,
                                "name": "subtractFees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2279,
                                "src": "7353:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7343:22:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2290,
                              "name": "cfoAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 693,
                              "src": "7323:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 2292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "7323:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7323:43:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2297,
                        "nodeType": "ExpressionStatement",
                        "src": "7323:43:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 2301,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2269,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2268,
                  "name": "onlyCFO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 720,
                  "src": "7059:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7059:7:6"
              }
            ],
            "name": "withdrawBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7047:2:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 2270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7067:0:6"
            },
            "scope": 2302,
            "src": "7023:362:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2303,
        "src": "446:6942:6"
      }
    ],
    "src": "126:7262:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.2",
  "updatedAt": "2019-03-17T15:05:22.104Z"
}